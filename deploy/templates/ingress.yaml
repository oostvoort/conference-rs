---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Values.projectName }}-{{ .Values.nameSpace }}-{{ .Values.appType.frontend }}-ingress-http
  namespace: {{ .Values.projectName }}-{{ .Values.nameSpace }}
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`{{ .Values.subDomainName.conference }}.{{ .Values.domainName }}`)
      kind: Rule
      middlewares:
        - name: {{ .Values.projectName }}-{{ .Values.nameSpace }}-{{ .Values.appType.frontend }}-ingress-redirect-scheme
      services:
        - name: {{ .Values.projectName }}-{{ .Values.nameSpace }}-{{ .Values.appType.frontend }}
          port: {{ .Values.webappContainerService.port }}

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Values.projectName }}-{{ .Values.nameSpace }}-{{ .Values.appType.frontend }}-ingress-https
  namespace: {{ .Values.projectName }}-{{ .Values.nameSpace }}
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`{{ .Values.subDomainName.conference }}.{{ .Values.domainName }}`)
      kind: Rule
      services:
        - name: {{ .Values.projectName }}-{{ .Values.nameSpace }}-{{ .Values.appType.frontend }}
          port: {{ .Values.webappContainerService.port }}
  tls:
    certResolver: letsencrypt

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Values.projectName }}-{{ .Values.nameSpace }}-{{ .Values.appType.frontend }}-wss
  namespace: {{ .Values.projectName }}-{{ .Values.nameSpace }}
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`{{ .Values.subDomainName.conference }}.{{ .Values.domainName }}`)
      kind: Rule
      middlewares:
        - name: server-headers
      services:
        - name: fck
          port: 60000
  tls:
    certResolver: letsencrypt

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Values.projectName }}-{{ .Values.nameSpace }}-{{ .Values.appType.frontend }}-wss2
  namespace: {{ .Values.projectName }}-{{ .Values.nameSpace }}
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`{{ .Values.subDomainName.conference }}.{{ .Values.domainName }}`)
      kind: Rule
      middlewares:
        - name: server-headers2
      services:
        - name: fck2
          port: 60001
  tls:
    certResolver: letsencrypt

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Values.projectName }}-{{ .Values.nameSpace }}-{{ .Values.appType.frontend }}-wss3
  namespace: {{ .Values.projectName }}-{{ .Values.nameSpace }}
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`{{ .Values.subDomainName.conference }}.{{ .Values.domainName }}`)
      kind: Rule
      middlewares:
        - name: server-headers3
      services:
        - name: fck3
          port: 60002
  tls:
    certResolver: letsencrypt

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .Values.projectName }}-{{ .Values.nameSpace }}-{{ .Values.appType.frontend }}-wss4
  namespace: {{ .Values.projectName }}-{{ .Values.nameSpace }}
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`{{ .Values.subDomainName.conference }}.{{ .Values.domainName }}`)
      kind: Rule
      middlewares:
        - name: server-headers4
      services:
        - name: fck4
          port: 60003
  tls:
    certResolver: letsencrypt

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: {{ .Values.projectName }}-{{ .Values.nameSpace }}-{{ .Values.appType.frontend }}-ingress-redirect-scheme
spec:
  redirectScheme:
    scheme: https
    permanent: true
    port: "443"

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: server-headers
spec:
  headers:
    customRequestHeaders:
      X-Forwarded-Proto: "https"

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: server-headers2
spec:
  headers:
    customRequestHeaders:
      X-Forwarded-Proto: "https"

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: server-headers3
spec:
  headers:
    customRequestHeaders:
      X-Forwarded-Proto: "https"

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: server-headers4
spec:
  headers:
    customRequestHeaders:
      X-Forwarded-Proto: "https"
